// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –∏ —Ç–∏–ø—ã –∏–∑ NestJS –∏ TypeORM
import { Injectable } from "@nestjs/common";
import { InjectRepository } from "@nestjs/typeorm";
import { Repository } from "typeorm";
import { TagEntity } from "./entities/tag.entity"; // —Ç–≤–æ—è —Å—É—â–Ω–æ—Å—Ç—å (—Ç–∞–±–ª–∏—Ü–∞ –≤ –ë–î)

// –î–µ–∫–æ—Ä–∞—Ç–æ—Ä @Injectable() –≥–æ–≤–æ—Ä–∏—Ç NestJS: —ç—Ç–æ—Ç –∫–ª–∞—Å—Å –º–æ–∂–Ω–æ –≤–Ω–µ–¥—Ä—è—Ç—å –≤ –¥—Ä—É–≥–∏–µ –∫–ª–∞—Å—Å—ã
@Injectable()
export class TagService {
  // üîπ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –∫–æ–≥–¥–∞ Nest —Å–æ–∑–¥–∞—ë—Ç —ç—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å.
  // üîπ –ó–¥–µ—Å—å –º—ã "–≤–Ω–µ–¥—Ä—è–µ–º" (inject) –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ‚Äî –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–ª—è TagEntity.
  constructor(
    // üî∏ @InjectRepository(TagEntity) ‚Äî –≥–æ–≤–æ—Ä–∏—Ç NestJS: "–¥–∞–π –º–Ω–µ Repository –¥–ª—è TagEntity"
    // üî∏ private readonly ‚Äî —Å–æ–∑–¥–∞—ë—Ç —Å–≤–æ–π—Å—Ç–≤–æ –∫–ª–∞—Å—Å–∞, –¥–æ—Å—Ç—É–ø–Ω–æ–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
    // üî∏ tagRepository ‚Äî –∏–º—è —Å–≤–æ–π—Å—Ç–≤–∞, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä–æ–µ –º—ã –±—É–¥–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é
    // üî∏ Repository<TagEntity> ‚Äî —Ç–∏–ø: —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç —Å TagEntity
    @InjectRepository(TagEntity)
    private readonly tagRepository: Repository<TagEntity>,
  ) {}

  // üîπ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Promise —Å –º–∞—Å—Å–∏–≤–æ–º TagEntity
  // üîπ async ‚Äî –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –≤–Ω—É—Ç—Ä–∏ –±—É–¥–µ—Ç await (–æ–∂–∏–¥–∞–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏)
  // üîπ Promise<TagEntity[]> ‚Äî —Ç–∏–ø –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è: "–æ–±–µ—â–∞–Ω–∏–µ –≤–µ—Ä–Ω—É—Ç—å –º–∞—Å—Å–∏–≤ —Ç–µ–≥–æ–≤"
  async findAll(): Promise<TagEntity[]> {
    // üî∏ await ‚Äî –∂–¥—ë–º, –ø–æ–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–æ–ª—É—á–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
    // üî∏ this.tagRepository.find() ‚Äî –º–µ—Ç–æ–¥ TypeORM, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç SELECT * FROM tags
    return await this.tagRepository.find();
  }
}
